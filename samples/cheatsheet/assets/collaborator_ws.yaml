---
openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
servers:
- url: https://api.github.com
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  "/repos/{owner}/{repo}/collaborators/{username}":
    put:
      summary: Add a repository collaborator
      description: |-
        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."

        Adding an outside collaborator may be restricted by enterprise administrators. For more information, see "[Enforcing repository management policies in your enterprise](https://docs.github.com/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories)."

        For more information on permission levels, see "[Repository permission levels for an organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)". There are restrictions on which permissions can be granted to organization members when an organization base role is in place. In this case, the permission being given must be equal to or higher than the org base permission. Otherwise, the request will fail with:

        ```
        Cannot assign {member} permission of {role name}
        ```

        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method)."

        The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [API](https://docs.github.com/rest/collaborators/invitations).

        **Updating an existing collaborator's permission level**

        The endpoint can also be used to change the permissions of an existing collaborator without first removing and re-adding the collaborator. To change the permissions, use the same endpoint and pass a different `permission` parameter. The response will be a `204`, with no other indication that the permission level changed.

        **Rate limits**

        You are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.
      tags:
      - repos
      operationId: repos/add-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#add-a-repository-collaborator
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/username"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: 'The permission to grant the collaborator. **Only valid
                    on organization-owned repositories.** We accept the following
                    permissions to be set: `pull`, `triage`, `push`, `maintain`, `admin`
                    and you can also specify a custom repository role name, if the
                    owning organization has defined any.'
                  default: push
            examples:
              new-invitation-is-created:
                summary: Add a collaborator with triage permissions
                value:
                  permission: triage
      responses:
        '201':
          description: Response when a new invitation is created
          content:
            application/json:
              schema:
                type: object
        '204':
          description: |-
            Response when:
            - an existing collaborator is added as a collaborator
            - an organization member is added as an individual collaborator
            - an existing team member (whose team is also a repository collaborator) is added as an individual collaborator
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
    delete:
      summary: Remove a repository collaborator
      description: |-
        Removes a collaborator from a repository.

        To use this endpoint, the authenticated user must either be an administrator of the repository or target themselves for removal.

        This endpoint also:
        - Cancels any outstanding invitations
        - Unasigns the user from any issues
        - Removes access to organization projects if the user is not an organization member and is not a collaborator on any other organization repositories.
        - Unstars the repository
        - Updates access permissions to packages

        Removing a user as a collaborator has the following effects on forks:
         - If the user had access to a fork through their membership to this repository, the user will also be removed from the fork.
         - If the user had their own fork of the repository, the fork will be deleted.
         - If the user still has read access to the repository, open pull requests by this user from a fork will be denied.

        > [!NOTE]
        > A user can still have access to the repository through organization permissions like base repository permissions.

        Although the API responds immediately, the additional permission updates might take some extra time to complete in the background.

        For more information on fork permissions, see "[About permissions and visibility of forks](https://docs.github.com/pull-requests/collaborating-with-pull-requests/working-with-forks/about-permissions-and-visibility-of-forks)".
      tags:
      - repos
      operationId: repos/remove-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#remove-a-repository-collaborator
      parameters:
      - "$ref": "#/components/parameters/owner"
      - "$ref": "#/components/parameters/repo"
      - "$ref": "#/components/parameters/username"
      responses:
        '204':
          description: No Content when collaborator was removed from the repository.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
  "/repository/{owner}/{repo}/collaborators/{username}/permission":
    get:
      servers:
        - url: http://github-provider-plugin-krateo.default.svc.cluster.local:8080
          description: Url used for a pod exposed with 8080 port exposed via clusterIP service
      parameters:
      - in: path
        name: owner
        schema:
          type: string
        required: true
      - in: path
        name: repo
        schema:
          type: string
        required: true
      - in: path
        name: username
        schema:
          type: string
        required: true
      responses:
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                title: Basic Error
                description: Basic Error
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  url:
                    type: string
                  status:
                    type: string
        '200':
          description: Get the permission of a collaborator in a repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Perms'
  "/":
    get:
      summary: GitHub API Root
      description: Get Hypermedia links to resources accessible in GitHub's REST API
      tags:
      - meta
      operationId: meta/root
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/root"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: meta
        subcategory: meta
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/meta/meta#github-api-root
components:
  securitySchemes:
    accessToken:
      type: http
      scheme: bearer
  parameters:
    username:
          name: username
          description: The handle for the GitHub user account.
          in: path
          required: true
          schema:
            type: string
    owner:
      name: owner
      description: The account owner of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      description: The name of the repository without the `.git` extension. The name
        is not case sensitive.
      in: path
      required: true
      schema:
        type: string
  schemas:
    User:
      type: object
      properties:
        avatar_url:
          type: string
        events_url:
          type: string
        followers_url:
          type: string
        following_url:
          type: string
        gists_url:
          type: string
        gravatar_id:
          type: string
        html_url:
          type: string
        id:
          type: integer
        login:
          type: string
        node_id:
          type: string
        organizations_url:
          type: string
        permissions:
          type: object
        received_events_url:
          type: string
        repos_url:
          type: string
        role_name:
          type: string
        site_admin:
          type: boolean
        starred_url:
          type: string
        subscriptions_url:
          type: string
        type:
          type: string
        url:
          type: string
    Perms:
      type: object
      properties:
        html_url:
          type: string
        id:
          type: integer
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            push:
              type: boolean
            admin:
              type: boolean
            maintain:
              type: boolean
            triage:
              type: boolean
        role_name:
          type: string
        user:
          $ref: '#/components/schemas/User'
    root:
      type: object
      properties:
        current_user_url:
          type: string
          format: uri-template
        current_user_authorizations_html_url:
          type: string
          format: uri-template
        authorizations_url:
          type: string
          format: uri-template
        code_search_url:
          type: string
          format: uri-template
        commit_search_url:
          type: string
          format: uri-template
        emails_url:
          type: string
          format: uri-template
        emojis_url:
          type: string
          format: uri-template
        events_url:
          type: string
          format: uri-template
        feeds_url:
          type: string
          format: uri-template
        followers_url:
          type: string
          format: uri-template
        following_url:
          type: string
          format: uri-template
        gists_url:
          type: string
          format: uri-template
        hub_url:
          type: string
          format: uri-template
          deprecated: true
        issue_search_url:
          type: string
          format: uri-template
        issues_url:
          type: string
          format: uri-template
        keys_url:
          type: string
          format: uri-template
        label_search_url:
          type: string
          format: uri-template
        notifications_url:
          type: string
          format: uri-template
        organization_url:
          type: string
          format: uri-template
        organization_repositories_url:
          type: string
          format: uri-template
        organization_teams_url:
          type: string
          format: uri-template
        public_gists_url:
          type: string
          format: uri-template
        rate_limit_url:
          type: string
          format: uri-template
        repository_url:
          type: string
          format: uri-template
        repository_search_url:
          type: string
          format: uri-template
        current_user_repositories_url:
          type: string
          format: uri-template
        starred_url:
          type: string
          format: uri-template
        starred_gists_url:
          type: string
          format: uri-template
        topic_search_url:
          type: string
          format: uri-template
        user_url:
          type: string
          format: uri-template
        user_organizations_url:
          type: string
          format: uri-template
        user_repositories_url:
          type: string
          format: uri-template
        user_search_url:
          type: string
          format: uri-template
      required:
      - current_user_url
      - current_user_authorizations_html_url
      - authorizations_url
      - code_search_url
      - commit_search_url
      - emails_url
      - emojis_url
      - events_url
      - feeds_url
      - followers_url
      - following_url
      - gists_url
      - issue_search_url
      - issues_url
      - keys_url
      - label_search_url
      - notifications_url
      - organization_url
      - organization_repositories_url
      - organization_teams_url
      - public_gists_url
      - rate_limit_url
      - repository_url
      - repository_search_url
      - current_user_repositories_url
      - starred_url
      - starred_gists_url
      - user_url
      - user_organizations_url
      - user_repositories_url
      - user_search_url